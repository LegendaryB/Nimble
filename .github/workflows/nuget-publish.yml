name: Publish NuGet

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to set'
        required: true
        default: '1.0.0'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5.0.0

      - name: Setup .NET
        uses: actions/setup-dotnet@v5.0.0
        with:
          dotnet-version: 9.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Update version in all packable csproj files
        run: |
          for csproj_file in $(find src -name "*.csproj"); do
            if ! grep -q "<IsPackable>false</IsPackable>" "$csproj_file"; then
              echo "Updating $csproj_file to version ${{ github.event.inputs.version }}"

              if grep -q "<Version>" "$csproj_file"; then
                sed -i "s#<Version>.*</Version>#<Version>${{ github.event.inputs.version }}</Version>#" "$csproj_file"
              else
                # insert before closing Project tag
                sed -i "/<\/Project>/i \  <Version>${{ github.event.inputs.version }}</Version>" "$csproj_file"
              fi
            else
              echo "Skipping $csproj_file (not packable)"
            fi
          done

      - name: Pack NuGet package
        run: dotnet pack --configuration Release --no-build --output ./nupkg

      - name: Publish to NuGet
        run: dotnet nuget push "./nupkg/*.nupkg" \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate